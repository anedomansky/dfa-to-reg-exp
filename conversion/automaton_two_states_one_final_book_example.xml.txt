##### Information about the states #####
[{'transitions': [{'symbols': ['1'], 'target': 1}, {'symbols': ['0'], 'target': 2}], 'isInitial': True, 'name': 1, 'isFinal': False}, {'transitions': [{'symbols': ['0', '1'], 'target': 2}], 'isInitial': False, 'name': 2, 'isFinal': True}]
##### Available alphabet #####
['0', '1']
##### R0 #####
[['-', '-', '-'], ['-', 'e+1', '0'], ['-', 'null', 'e+0+1']]
##### Rk #####
k = 1:[['-', '-', '-'], ['-', '(e+1)+(e+1)(e+1)*(e+1)', '(0)+(e+1)(e+1)*(0)'], ['-', '(null)+(null)(e+1)*(e+1)', '(e+0+1)+(null)(e+1)*(0)']]
k = 2:[['-', '-', '-'], ['-', '((e+1)+(e+1)(e+1)*(e+1))+((0)+(e+1)(e+1)*(0))((e+0+1)+(null)(e+1)*(0))*((null)+(null)(e+1)*(e+1))', '((0)+(e+1)(e+1)*(0))+((0)+(e+1)(e+1)*(0))((e+0+1)+(null)(e+1)*(0))*((e+0+1)+(null)(e+1)*(0))'], ['-', '((null)+(null)(e+1)*(e+1))+((e+0+1)+(null)(e+1)*(0))((e+0+1)+(null)(e+1)*(0))*((null)+(null)(e+1)*(e+1))', '((e+0+1)+(null)(e+1)*(0))+((e+0+1)+(null)(e+1)*(0))((e+0+1)+(null)(e+1)*(0))*((e+0+1)+(null)(e+1)*(0))']]
##### Final regular expression (not simplified) #####
((0)+(e+1)(e+1)*(0))+((0)+(e+1)(e+1)*(0))((e+0+1)+(null)(e+1)*(0))*((e+0+1)+(null)(e+1)*(0))