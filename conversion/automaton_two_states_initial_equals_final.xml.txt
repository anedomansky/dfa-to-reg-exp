##### Information about the states #####
[{'name': 1, 'transitions': [{'target': 1, 'symbols': ['1']}, {'target': 2, 'symbols': ['0']}], 'isFinal': True, 'isInitial': True}, {'name': 2, 'transitions': [{'target': 2, 'symbols': ['0']}, {'target': 1, 'symbols': ['1']}], 'isFinal': False, 'isInitial': False}]
##### Available alphabet #####
['0', '1']
##### R0 #####
[['-', '-', '-'], ['-', 'e+1', '0'], ['-', '1', 'e+0']]
##### Rk #####
k = 1:[['-', '-', '-'], ['-', '(e+1)+(e+1)(e+1)*(e+1)', '(0)+(e+1)(e+1)*(0)'], ['-', '(1)+(1)(e+1)*(e+1)', '(e+0)+(1)(e+1)*(0)']]
k = 2:[['-', '-', '-'], ['-', '((e+1)+(e+1)(e+1)*(e+1))+((0)+(e+1)(e+1)*(0))((e+0)+(1)(e+1)*(0))*((1)+(1)(e+1)*(e+1))', '((0)+(e+1)(e+1)*(0))+((0)+(e+1)(e+1)*(0))((e+0)+(1)(e+1)*(0))*((e+0)+(1)(e+1)*(0))'], ['-', '((1)+(1)(e+1)*(e+1))+((e+0)+(1)(e+1)*(0))((e+0)+(1)(e+1)*(0))*((1)+(1)(e+1)*(e+1))', '((e+0)+(1)(e+1)*(0))+((e+0)+(1)(e+1)*(0))((e+0)+(1)(e+1)*(0))*((e+0)+(1)(e+1)*(0))']]
##### Final regular expression (not simplified) #####
((e+1)+(e+1)(e+1)*(e+1))+((0)+(e+1)(e+1)*(0))((e+0)+(1)(e+1)*(0))*((1)+(1)(e+1)*(e+1))